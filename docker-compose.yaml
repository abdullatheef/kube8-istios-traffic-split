version: '3.8'

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: abc
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"   # RabbitMQ default port
      - "15672:15672" # RabbitMQ management UI
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: pass

  django:
    build:
      context: ./backend/to_do_backend  # Updated context
      dockerfile: Dockerfile
    volumes:
      - ./backend/to_do_backend:/app  # Mount the current directory
    environment:
      DB_NAME: mydb                   # Database name
      DB_USER: abc                    # Database user
      DB_PASSWORD: 123                # Database password
      DB_HOST: postgres                # Database host (service name)
      DB_PORT: 5432                   # Database port
      RABBITMQ_HOST: rabbitmq         # RabbitMQ host (service name)

    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - rabbitmq

  celery:
    build:
      context: ./backend/to_do_backend  # Updated context
      dockerfile: CeleryDockerfile
    volumes:
      - ./backend/to_do_backend:/app  # Mount the current directory
    environment:
      DB_NAME: mydb                   # Database name
      DB_USER: abc                    # Database user
      DB_PASSWORD: 123                # Database password
      DB_HOST: postgres                # Database host (service name)
      DB_PORT: 5432                   # Database port
      RABBITMQ_HOST: rabbitmq         # RabbitMQ host (service name)
    depends_on:
      - django
      - rabbitmq

  nginx:
    build:
      context: ./frontend  # Path to your frontend folder
      dockerfile: Dockerfile  # Ensure this points to the Dockerfile you created
    ports:
      - "80:80"

volumes:
  postgres_data:
